#!/bin/bash
#farts.cfg

# system: 
# define a list of files to be copied from the current system into the tarball
# supports environment variables, wildcards, and globbing
 
# single quotes are important here! Environment variables will stay unexpanded in the tarball with single quotes.
# single quotes example:
# $HOME/file expands to /home/old_user/file and gets copied to zip/$HOME/file
# when we unzip on the new system, zip/$HOME/file expands to /home/new_user/file
 
# double quotes example:
# $HOME/file expands to /home/old_user/file and gets copied to zip/home/old_user/file
# when we unzip on the new system, zip/home/old_user/file expands to /home/old_user/file
system=(
    # '/etc/X11/xorg.conf.d/*'
    # '/etc/fstab'
    # '/etc/hosts'
    # '/etc/mkinitcpio.d/linux-lts.preset'
    # '/etc/pacman.d/mirrorlist'
    # '/etc/tlp.conf'
    # '/etc/wireguard/*'
    '/home/pape'
    '$HOME'
    # '$HOME/.bash_history'
    # '$HOME/.mozilla/firefox'
    # '~/.alacritty.yml'
    # '~/.gnupg'
    # '~/.ssh'
)
# helpers: aur helpers to install
# works with: paru(-bin), yay(-bin), and pikaur
# when installing aur dependancies below, farts will use the first helper in this list
helpers=(
    "paru-bin"
)
# dependancies: a list of packages to be explicitly installed
# supports command substitution using $(command)
# when zipping, pacman -Qq will mark for installation all packages on the current system. you can override or append to this list. this list will then be stored in a .cfg file inside the resulting tar.xz
# If you have a package installed that didn't come from the AUR or official repos, farts won't be able to install it for you automagically; you'll want to handle installing it in 'pre_custom'
dependancies=(
    # "$(pacman -Qq)"
    "bashtop"
    "brave-bin"
)
# pre_custom: this function will be ran on unzip, after 'system' files are overlaid but BEFORE 'dependancies' are installed
pre_custom() {
    echo "custom pre function"
    (
    sudo pacman --needed --noconfirm -S git
    git clone https://github.com/iofq/repo
    cd repo/dwm-iofq-git && makepkg --noconfirm -fsric
    )
    rm -rf repo
}
# post_custom: this function will be ran on unzip, after 'system' files are overlaid AND 'dependancies' are installed
post_custom() {
    echo "custom post function"
    (
    cd $HOME
    git clone https://github.com/iofq/.dotfiles
    cd .dotfiles 
    ./install -f
    )
}
